// Generated by view binder compiler. Do not edit!
package com.example.akshayshopapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.akshayshopapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminPanelHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button DeleteProduct;

  @NonNull
  public final Button UpdateProduct;

  @NonNull
  public final Button addProduct;

  @NonNull
  public final Button addUser;

  @NonNull
  public final Button allUser;

  @NonNull
  public final Button deleteUser;

  @NonNull
  public final Button updateUser;

  private ActivityAdminPanelHomeBinding(@NonNull LinearLayout rootView,
      @NonNull Button DeleteProduct, @NonNull Button UpdateProduct, @NonNull Button addProduct,
      @NonNull Button addUser, @NonNull Button allUser, @NonNull Button deleteUser,
      @NonNull Button updateUser) {
    this.rootView = rootView;
    this.DeleteProduct = DeleteProduct;
    this.UpdateProduct = UpdateProduct;
    this.addProduct = addProduct;
    this.addUser = addUser;
    this.allUser = allUser;
    this.deleteUser = deleteUser;
    this.updateUser = updateUser;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminPanelHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminPanelHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_panel_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminPanelHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DeleteProduct;
      Button DeleteProduct = ViewBindings.findChildViewById(rootView, id);
      if (DeleteProduct == null) {
        break missingId;
      }

      id = R.id.UpdateProduct;
      Button UpdateProduct = ViewBindings.findChildViewById(rootView, id);
      if (UpdateProduct == null) {
        break missingId;
      }

      id = R.id.addProduct;
      Button addProduct = ViewBindings.findChildViewById(rootView, id);
      if (addProduct == null) {
        break missingId;
      }

      id = R.id.addUser;
      Button addUser = ViewBindings.findChildViewById(rootView, id);
      if (addUser == null) {
        break missingId;
      }

      id = R.id.allUser;
      Button allUser = ViewBindings.findChildViewById(rootView, id);
      if (allUser == null) {
        break missingId;
      }

      id = R.id.deleteUser;
      Button deleteUser = ViewBindings.findChildViewById(rootView, id);
      if (deleteUser == null) {
        break missingId;
      }

      id = R.id.updateUser;
      Button updateUser = ViewBindings.findChildViewById(rootView, id);
      if (updateUser == null) {
        break missingId;
      }

      return new ActivityAdminPanelHomeBinding((LinearLayout) rootView, DeleteProduct,
          UpdateProduct, addProduct, addUser, allUser, deleteUser, updateUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
